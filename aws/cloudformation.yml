AWSTemplateFormatVersion: '2010-09-09'
Description: Create the infrastructure needed to run the Connecting Voices Admin

Outputs:
  BucketName:
    Description: The S3 bucket name
    Value:
      Fn::Join:
        - "-"
        - - admin
          - Ref: Environment
          - Ref: Uuid
  CloudFrontDomain:
    Description: The domain name of the CloudFront distribution
    Value:
      Fn::GetAtt:
        - Distribution
        - DomainName
  CloudFrontId:
    Description: The ID of the CloudFront distribution
    Value:
      Ref: Distribution

Parameters:
  CertificateArn:
    Description: The ARN for the CloudFront distribution SSL certificate (must be in us-east-1).
    Type: String
  Cname:
    AllowedPattern: "^(?!:\\/\\/)([a-zA-Z0-9-_]+\\.)*[a-zA-Z0-9][a-zA-Z0-9-_]+\\.[a-zA-Z]{2,11}?$"
    ConstraintDescription: Must be a valid domain
    Description: The CNAME for the site.
    MinLength: '1'
    Type: String
  Environment:
    Description: The environment this stack is for (e.g. production or staging).
    MinLength: '1'
    Type: String
  Uuid:
    Default: c92ca114-c132-45b6-ac17-526a025cd3a4
    Description: The unique ID for this stack.
    MaxLength: '36'
    MinLength: '36'
    Type: String

Resources:
  Bucket:
    Properties:
      AccessControl: PublicRead
      BucketName:
        Fn::Join:
          - "-"
          - - admin
            - Ref: Environment
            - Ref: Uuid
    Type: AWS::S3::Bucket
  CiUser:
    Properties:
      Policies:
        - PolicyDocument:
            Statement:
              - Action: s3:*
                Effect: Allow
                Resource: "*"
              - Action: secretsmanager:GetSecretValue
                Effect: Allow
                Resource: "*"
              - Action: cloudfront:CreateInvalidation
                Effect: Allow
                Resource: "*"
            Version: '2012-10-17'
          PolicyName: CiUserPolicy
      UserName:
        Fn::Join:
          - "-"
          - - ci-admin
            - Ref: Environment
    Type: AWS::IAM::User
  Distribution:
    Properties:
      DistributionConfig:
        Aliases:
          - Ref: Cname
        CacheBehaviors:
          - AllowedMethods:
              - HEAD
              - GET
            CachedMethods:
              - HEAD
              - GET
            Compress: 'true'
            ForwardedValues:
              QueryString: 'false'
            PathPattern: "*"
            TargetOriginId:
              Fn::Join:
                - "-"
                - - S3
                  - Ref: Bucket
            ViewerProtocolPolicy: redirect-to-https
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: "/index.html"
        DefaultCacheBehavior:
          ForwardedValues:
            QueryString: 'false'
          TargetOriginId:
            Fn::Join:
              - "-"
              - - S3
                - Ref: Bucket
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: 'true'
        IPV6Enabled: 'true'
        HttpVersion: 'http2'
        Origins:
          - DomainName:
              Fn::GetAtt:
                - Bucket
                - DomainName
            Id:
              Fn::Join:
                - "-"
                - - S3
                  - Ref: Bucket
            S3OriginConfig: {}
        ViewerCertificate:
          AcmCertificateArn:
            Ref: CertificateArn
          SslSupportMethod: sni-only
    Type: AWS::CloudFront::Distribution
